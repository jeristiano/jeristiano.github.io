<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeremy&#39;s space</title>
  <subtitle>Don&#39;t be evil</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jeristiano.github.io/"/>
  <updated>2017-02-08T06:50:13.895Z</updated>
  <id>https://jeristiano.github.io/</id>
  
  <author>
    <name>jeremyK</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>laravel数据库以及CURD</title>
    <link href="https://jeristiano.github.io/2017/02/08/laravel-not/"/>
    <id>https://jeristiano.github.io/2017/02/08/laravel-not/</id>
    <published>2017-02-08T06:23:52.000Z</published>
    <updated>2017-02-08T06:50:13.895Z</updated>
    
    <content type="html"><![CDATA[<h3 id="db-facade-原始查找"><a href="#db-facade-原始查找" class="headerlink" title="db facade(原始查找)"></a>db facade(原始查找)</h3><blockquote>
<p>使用facade就是使用原始的sql语句来查询修改数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DB::select(&apos;sql 语句&apos;)</div><div class="line">DB::insert(&apos;insert into student (name,age) values(?,?),[&apos;jeremy&apos;,22]&apos;)</div><div class="line">DB::update(&apos;sql 语句&apos;)</div><div class="line">DB::delete(&apos;sql 语句&apos;</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="查询构造器"><a href="#查询构造器" class="headerlink" title="查询构造器"></a>查询构造器</h3><blockquote>
<p>使用laravel操作数据库的必备技能</p>
</blockquote>
<h4 id="查询构造器简介及新增数据"><a href="#查询构造器简介及新增数据" class="headerlink" title="查询构造器简介及新增数据"></a>查询构造器简介及新增数据</h4><ul>
<li>larevel查询构造器(query bulider)提供方便/流畅的接口,用来建立及执行数据库查找语句</li>
<li>使用PDO 参数绑定,以保护应用程序免于sql注入因此传入的参数不需额外转意特殊字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//插入新数组返回bool</div><div class="line">DB::table(&apos;tablename&apos;)-&gt;insert([&apos;age&apos;=&gt;18,&apos;name&apos;=&gt;&apos;jeremy&apos;])</div><div class="line">//插入新数据得到自增id</div><div class="line">DB::table(&apos;tablename&apos;)-&gt;insertGetId([&apos;age&apos;=&gt;18,&apos;name&apos;=&gt;&apos;jeremy&apos;])</div><div class="line">//一次插入多个数据数组</div><div class="line"> DB::table(&apos;tablename&apos;)-&gt;insert([</div><div class="line">		 &apos;age&apos;=&gt;18,&apos;name&apos;=&gt;&apos;jeremy1&apos;],</div><div class="line">		 &apos;age&apos;=&gt;19,&apos;name&apos;=&gt;&apos;jeremy2&apos;],</div><div class="line">		 &apos;age&apos;=&gt;17,&apos;name&apos;=&gt;&apos;jeremy3&apos;],</div><div class="line">		 &apos;age&apos;=&gt;16,&apos;name&apos;=&gt;&apos;jeremy4&apos;],</div><div class="line">		 )</div></pre></td></tr></table></figure>
<h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">	-&gt;where(&apos;id&apos;,12)</div><div class="line">	-&gt;update([&apos;age&apos;=&gt;30])</div></pre></td></tr></table></figure>
<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">	-&gt;where(&apos;id&apos;,&apos;&gt;=&apos;,12)</div><div class="line">	-&gt;delete()</div></pre></td></tr></table></figure>
<h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//获得所有数据</div><div class="line">DB::table(&apos;tablename&apos;)-&gt;get();</div><div class="line">//返回第一条记录</div><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">-&gt;orderBy(&apos;id&apos;,&apos;desc&apos;)</div><div class="line">-&gt;first();</div><div class="line">//返回结果结果集中某个字段pluck</div><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">-&gt;orderBy(&apos;id&apos;,&apos;desc&apos;)</div><div class="line">-&gt;pluck(&apos;name&apos;);</div><div class="line">//返回结果结果集中制定的字段并使用某个键为下标</div><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">-&gt;orderBy(&apos;id&apos;,&apos;desc&apos;)</div><div class="line">-&gt;lists(&apos;name&apos;,&apos;id&apos;);</div><div class="line"></div><div class="line">//select查询</div><div class="line">DB::table(&apos;tablename&apos;)</div><div class="line">-&gt;select(&apos;id&apos;,&apos;name&apos;,&apos;age&apos;)</div><div class="line">-&gt;get();</div><div class="line">//chunk 每次查询n个数据并回调</div><div class="line">DB::table(&apos;tablename&apos;)-&gt;chunk(1000,function($res)&#123;	</div><div class="line">	if($res)&#123;</div><div class="line">	return false;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Eloquent-ORM-Object-Relational-Model"><a href="#Eloquent-ORM-Object-Relational-Model" class="headerlink" title="Eloquent ORM(Object Relational Model )"></a>Eloquent ORM(Object Relational Model )</h3><blockquote>
<p>操作laravel数据库最常用的方式</p>
</blockquote>
<ul>
<li>Laravel 所自带的Eloquent ORM是一哥优美 简洁的ActiveRecord实现,用来实现数据库操作</li>
<li>每个数据表都有一个与之对应的’模型(Model)’ 用于和数据表交互</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</div><div class="line">	 <span class="comment">//模型与数据库表关联</span></div><div class="line">	<span class="keyword">protected</span> $table=<span class="string">'student'</span>;</div><div class="line">	<span class="comment">//指定id</span></div><div class="line">	<span class="keyword">protected</span> $primaryKey=<span class="string">'id'</span>;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查询方法</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//返回所有集合对象</span></div><div class="line">$res = student::all();</div><div class="line"><span class="comment">//返回一个集合对象</span></div><div class="line">$res = student::find(<span class="number">1001</span>);</div><div class="line"><span class="comment">//findOrFail查询不到抛出异常</span></div><div class="line">$res = student::findOrFail(<span class="number">1001</span>);</div></pre></td></tr></table></figure>
<p><code>查询构造器的使用</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//查询所有</div><div class="line">Student::get();</div><div class="line">//查询一条</div><div class="line">Student::where(&apos;id&apos;,&apos;&gt;&apos;,&apos;1001&apos;)</div><div class="line">-&gt;orderBy(&apos;id&apos;)</div><div class="line">-&gt;first();</div><div class="line">//查询n条</div><div class="line">Student::where(&apos;id&apos;,&apos;&gt;&apos;,&apos;1001&apos;)</div><div class="line">-&gt;orderBy(&apos;id&apos;)</div><div class="line">-&gt;chunk(2000,function($res)&#123;</div><div class="line">	var_dump($res)</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><code>增加数据</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//此处不允许批量赋值</div><div class="line">Student::create(</div><div class="line">	[&apos;name&apos;=&gt;&apos;jeremy&apos;],</div><div class="line">	[&apos;age&apos;=&gt;12],</div><div class="line">	[&apos;sex&apos;=&gt;1],</div><div class="line">)</div><div class="line">//在模型出加上允许批量赋值的字段名字</div><div class="line">protected $fillable=[&apos;name&apos;,&apos;age&apos;]</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//没有该数据则新增此数据</div><div class="line">Student::firstOrCreate()</div><div class="line"></div><div class="line">//没有该数据调用save()后新增此数据</div><div class="line">Student::firstOrNew()-&gt;save();</div></pre></td></tr></table></figure>
<p><code>修改数据</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//第一种</div><div class="line">$student=Student::find(1020);</div><div class="line">$student-&gt;name=&apos;jeremy&apos;;</div><div class="line">$student-&gt;save();</div><div class="line">//第二种</div><div class="line">Student::where(&apos;id&apos;,12)</div><div class="line">-&gt;update([&apos;name&apos;=&gt;&apos;jeremy&apos;]);</div></pre></td></tr></table></figure></p>
<p><code>删除数据</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//通过模型删除</div><div class="line">$student= Student::find(1021);</div><div class="line">$student-&gt;delete();</div><div class="line">//通过主键删除</div><div class="line">Student::destroy(1020,1021);</div><div class="line"></div><div class="line">//通过条件删除</div><div class="line">Student::where(&apos;id&apos;,&apos;&gt;&apos;,1004)-delete();</div></pre></td></tr></table></figure></p>
<p><code>pluck</code></p>
<p>获取一列的值<br>若你想要获取一个包含单个字段值的数组，你可以使用 pluck 方法。在这个例子中，我们将取出 roles 数据表 title 字段的<br>数组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$titles = DB::table(&apos;roles&apos;)-&gt;pluck(&apos;title&apos;);</div><div class="line">foreach ($titles as $title) &#123;</div><div class="line">echo $title;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>你也可以在返回的数组中指定自定义的键值字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$roles = DB::table(&apos;roles&apos;)-&gt;pluck(&apos;title&apos;, &apos;name&apos;);</div><div class="line">foreach ($roles as $name =&gt; $title) &#123;</div><div class="line">echo $title;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;db-facade-原始查找&quot;&gt;&lt;a href=&quot;#db-facade-原始查找&quot; class=&quot;headerlink&quot; title=&quot;db facade(原始查找)&quot;&gt;&lt;/a&gt;db facade(原始查找)&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;使用facad
    
    </summary>
    
      <category term="编程" scheme="https://jeristiano.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="laravel" scheme="https://jeristiano.github.io/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>windows系统下安装Composer</title>
    <link href="https://jeristiano.github.io/2017/02/08/firstblog/"/>
    <id>https://jeristiano.github.io/2017/02/08/firstblog/</id>
    <published>2017-02-08T05:25:28.000Z</published>
    <updated>2017-02-08T06:50:22.183Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Composer介绍"><a href="#Composer介绍" class="headerlink" title="Composer介绍"></a>Composer介绍</h3><p>Composer 是 PHP 的一个依赖管理工具。它允许你申明项目所依赖的代码库，它会在你的项目中为你安装他们。Composer 不是一个包管理器。是的，它涉及 “packages” 和 “libraries”，但它在每个项目的基础上进行管理，在你项目的某个目录中（例如 vendor）进行安装。默认情况下它不会在全局安装任何东西。因此，这仅仅是一个依赖管理。</p>
<pre><code>Composer下载
下载地址：getcom poser.org    （去掉空格）
中文镜像：phpcom poser.com  （去掉空格）
</code></pre><p><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/195921o2z605a55amqa0sa.png" alt="enter image description here"><br><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200038h15g31yj3g81f1cw.png" alt="enter image description here"></p>
<p>下载成功</p>
<p><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200051x4vpp55tnvs22ijw.png" alt="enter image description here"></p>
<p>准备安装软件，双击软件就可以安装此软件 默认安装装就可以了，并会自动搜索PHP.exe的安装路径。</p>
<p><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200115pkkwe9i9irzkv3ca.png" alt="enter image description here"></p>
<p>选择NEXT，稍等一会，下载相关组建<br><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200313dwreyedxfdasfjoz.png" alt="enter image description here"></p>
<p>显示此页面表示安装完成！如果报错 就检查 PHP扩展的OpenSSL 有没有打开<br><img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200343xgdse66jstrh8jwj.png" alt="enter image description here"><br>验证是否成功。打开win+R -&gt; cmd 输入 composer,显示如下界面 表示安装成功！<img src="http://bbs.houdunwang.com/data/attachment/forum/201603/17/200400utwp9i3qaipka3w7.png" alt="enter image description here"></p>
<h3 id="启用镜像服务的方式有两种："><a href="#启用镜像服务的方式有两种：" class="headerlink" title="启用镜像服务的方式有两种："></a>启用镜像服务的方式有两种：</h3><pre><code>系统全局配置： 即将配置信息添加到 Composer 的全局配置文件 config.json 中。
单个项目配置： 将配置信息添加到某个项目的 composer.json 文件中。
</code></pre><p>例1：修改 composer 的全局配置文件（推荐方式）<br>打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</div></pre></td></tr></table></figure>
<p>上述命令将会在当前项目中的 composer.json文件的末尾自动添加镜像的配置信息（你也可以自己手工添加）：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">  "repositories": &#123;</div><div class="line">  "packagist": &#123; </div><div class="line">   "type": "composer", </div><div class="line">   "url": "https://packagist.phpcomposer.com"</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以 laravel 项目的 composer.json 配置文件为例，执行上述命令后如下所示（注意最后几行）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;name&quot;: &quot;laravel/laravel&quot;,</div><div class="line">    &quot;description&quot;: &quot;The Laravel Framework.&quot;,</div><div class="line">    &quot;keywords&quot;: [</div><div class="line">        &quot;framework&quot;,</div><div class="line">        &quot;laravel&quot;</div><div class="line">    ],</div><div class="line">    &quot;license&quot;: &quot;MIT&quot;,</div><div class="line">    &quot;type&quot;: &quot;project&quot;,</div><div class="line">    &quot;require&quot;: &#123;</div><div class="line">        &quot;php&quot;: &quot;&gt;=5.5.9&quot;,</div><div class="line">        &quot;laravel/framework&quot;: &quot;5.2.*&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;require-dev&quot;: &#123;</div><div class="line">        &quot;fzaninotto/faker&quot;: &quot;~1.4&quot;,</div><div class="line">        &quot;mockery/mockery&quot;: &quot;0.9.*&quot;,</div><div class="line">        &quot;phpunit/phpunit&quot;: &quot;~4.0&quot;,</div><div class="line">        &quot;symfony/css-selector&quot;: &quot;2.8.*|3.0.*&quot;,</div><div class="line">        &quot;symfony/dom-crawler&quot;: &quot;2.8.*|3.0.*&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;autoload&quot;: &#123;</div><div class="line">        &quot;classmap&quot;: [</div><div class="line">            &quot;database&quot;</div><div class="line">        ],</div><div class="line">        &quot;psr-4&quot;: &#123;</div><div class="line">            &quot;App\\&quot;: &quot;app/&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;autoload-dev&quot;: &#123;</div><div class="line">        &quot;classmap&quot;: [</div><div class="line">            &quot;tests/TestCase.php&quot;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &quot;scripts&quot;: &#123;</div><div class="line">        &quot;post-root-package-install&quot;: [</div><div class="line">            &quot;php -r \&quot;copy(&apos;.env.example&apos;, &apos;.env&apos;);\&quot;&quot;</div><div class="line">        ],</div><div class="line">        &quot;post-create-project-cmd&quot;: [</div><div class="line">            &quot;php artisan key:generate&quot;</div><div class="line">        ],</div><div class="line">        &quot;post-install-cmd&quot;: [</div><div class="line">            &quot;php artisan clear-compiled&quot;,</div><div class="line">            &quot;php artisan optimize&quot;</div><div class="line">        ],</div><div class="line">        &quot;pre-update-cmd&quot;: [</div><div class="line">            &quot;php artisan clear-compiled&quot;</div><div class="line">        ],</div><div class="line">        &quot;post-update-cmd&quot;: [</div><div class="line">            &quot;php artisan optimize&quot;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &quot;config&quot;: &#123;</div><div class="line">        &quot;preferred-install&quot;: &quot;dist&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;repositories&quot;: &#123;</div><div class="line">        &quot;packagist&quot;: &#123;</div><div class="line">            &quot;type&quot;: &quot;composer&quot;,</div><div class="line">            &quot;url&quot;: &quot;https://packagist.phpcomposer.com&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//转换成中文镜像</div><div class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</div><div class="line">//安装版本</div><div class="line">composer create-project laravel/laravel your-project-name 5.0.*</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Composer介绍&quot;&gt;&lt;a href=&quot;#Composer介绍&quot; class=&quot;headerlink&quot; title=&quot;Composer介绍&quot;&gt;&lt;/a&gt;Composer介绍&lt;/h3&gt;&lt;p&gt;Composer 是 PHP 的一个依赖管理工具。它允许你申明项目所依赖的代
    
    </summary>
    
      <category term="编程" scheme="https://jeristiano.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="laravel" scheme="https://jeristiano.github.io/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jeristiano.github.io/2017/02/07/hello-world/"/>
    <id>https://jeristiano.github.io/2017/02/07/hello-world/</id>
    <published>2017-02-07T07:57:26.707Z</published>
    <updated>2017-02-08T01:50:51.490Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
